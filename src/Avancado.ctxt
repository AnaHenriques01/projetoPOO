#BlueJ class context
comment0.target=Avancado
comment1.params=
comment1.target=Avancado()
comment1.text=\n\ Construtor\ por\ omiss\u00E3o.\n
comment10.params=
comment10.target=Avancado\ clone()
comment10.text=\n\ M\u00E9todo\ que\ faz\ um\ clone\ do\ objeto\ Avancado.\n\ @return\ o\ clone\n
comment2.params=nome\ nr_camisola\ velocidade\ resistencia\ destreza\ impulsao\ jogoCabeca\ remate\ capPasse\ drible\ historico
comment2.target=Avancado(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ java.util.List)
comment2.text=\n\ Construtor\ parametrizado.\n
comment3.params=umJog
comment3.target=Avancado(Avancado)
comment3.text=\n\ Construtor\ de\ c\u00F3pia.\n
comment4.params=
comment4.target=int\ getDrible()
comment4.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ o\ valor\ do\ drible\ do\ avan\u00E7ado.\n\ @return\ o\ valor\ do\ drible\n
comment5.params=drible
comment5.target=void\ setDrible(int)
comment5.text=\n\ M\u00E9todo\ que\ muda\ o\ valor\ do\ drible\ do\ avan\u00E7ado.\n\ @param\ o\ novo\ valor\ do\ drible\n
comment6.params=umJog
comment6.target=double\ habAvancado(Jogador)
comment6.text=\n\ M\u00E9todo\ que\ calcula\ a\ habilidade\ do\ avan\u00E7ado.\n\ @param\ o\ jogador\ cuja\ habilidade\ ser\u00E1\ calculada\n\ @return\ a\ habilidade\ do\ avan\u00E7ado\n
comment7.params=
comment7.target=void\ apresentarJogadorAvancado()
comment7.text=\n\ M\u00E9todo\ que\ imprime\ a\ informa\u00E7\u00E3o\ de\ um\ avan\u00E7ado,\ incluindo\ o\ seu\ hist\u00F3rico\n\ (ou\ seja,\ as\ equipas\ onde\ j\u00E1\ esteve).\n
comment8.params=input
comment8.target=Avancado\ parse(java.lang.String)
comment8.text=\n\ M\u00E9todo\ que\ preenche\ os\ campos\ de\ um\ objeto\ de\ tipo\ Avancado\ (e\ dos\ seus\ campos)\n\ com\ o\ conte\u00FAdo\ de\ uma\ string\ separado\ por\ v\u00EDrgulas.\n
comment9.params=print\ umJog
comment9.target=void\ saverAvancado(java.io.PrintWriter,\ Jogador)
comment9.text=\n\ M\u00E9todo\ que\ guarda\ um\ objeto\ de\ tipo\ Avancado.\n
numComments=11
